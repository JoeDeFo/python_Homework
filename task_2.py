"""
Посчитать коэффициент линейной регрессии при заработной плате (zp), используя градиентный спуск (без intercept).
"""

import numpy as np
n = 10
x = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
y = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

#Создадим функцию средней квадрат. ошибки:
def rmse_(B1, y=y, x=x, n=10):
    return np.sum((B1 * x - y) ** 2) / n
B1 = 0.1
alfa = 1e-6

for i in range(1000000):
    B1 -= alfa * (2/n) * np.sum((B1 * x - y) * x)
    if i % 300000 == 0:
        print('Iter: {i}, B1 = {B1}, rmse = {rmse}'.format(i = i, B1 = B1, rmse = rmse_(B1)))
Iter: 0, B1 = 0.25952808, rmse = 493237.7212546963
Iter: 100000, B1 = 5.889820420132673, rmse = 56516.85841571943
Iter: 200000, B1 = 5.889820420132673, rmse = 56516.85841571943
Iter: 300000, B1 = 5.889820420132673, rmse = 56516.85841571943
Iter: 400000, B1 = 5.889820420132673, rmse = 56516.85841571943
Iter: 500000, B1 = 5.889820420132673, rmse = 56516.85841571943
Iter: 600000, B1 = 5.889820420132673, rmse = 56516.85841571943
Iter: 700000, B1 = 5.889820420132673, rmse = 56516.85841571943
Iter: 800000, B1 = 5.889820420132673, rmse = 56516.85841571943
Iter: 900000, B1 = 5.889820420132673, rmse = 56516.85841571943